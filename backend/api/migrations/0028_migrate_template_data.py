# Generated by Django 5.2 on 2025-05-02 05:35

from django.db import migrations

def migrate_old_template_data(apps, schema_editor):
    # Get historical models (don't import from models.py directly)
    OldTemplate = apps.get_model('api', 'ReportTemplates')
    OldColumn = apps.get_model('api', 'TemplateColumns')
    OldFilter = apps.get_model('api', 'TemplateFilters')

    NewTemplate = apps.get_model('api', 'TemplateMaster')
    NewField = apps.get_model('api', 'TemplateDetails')

    for old_template in OldTemplate.objects.all():
        new_template = NewTemplate.objects.create(
            id=old_template.id, 
            report_id=old_template.parent_report_id,
            name=old_template.name,
        )

        # Migrate columns
        for column in OldColumn.objects.filter(template_id=old_template.id):
            NewField.objects.create(
                template=new_template,
                field_name=column.column_name,
                field_label=column.label,
                field_type='column'
            )

        # Migrate filters
        for flt in OldFilter.objects.filter(template_id=old_template.id):
            NewField.objects.create(
                template=new_template,
                field_name=flt.filter_name,
                field_label=flt.filter_label,
                field_type='filter',
                filter_type=getattr(flt, 'filter_type', None),
                is_compulsory=getattr(flt, 'is_compulsory', False)
            )

def reverse_migration(apps, schema_editor):
    # Optional: add reverse logic if needed
    pass
class Migration(migrations.Migration):

    dependencies = [
        ('api', '0026_templatemaster'),
    ]

    operations = [
          migrations.RunPython(migrate_old_template_data, reverse_migration),
    ]
